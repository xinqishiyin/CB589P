C51 COMPILER V9.52.0.0   CB_LINE                                                           06/02/2018 10:26:56 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE CB_LINE
OBJECT MODULE PLACED IN CB_Line.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CB_Line.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTE
                    -ND TABS(2)

line level    source

   1          #include "system.h"
   2          #include "uart.h"
   3          #include "CB_Line.h"
   4          #include "KB4815.h"
   5          #include "Keys.h"
   6          #include "TM1722.h"
   7          #include "lcd.h"
   8          #include "memory.h"
   9          #include "Menu.h"
  10          
  11          #define SNR_RSSI_CHECK_TIME 5
  12          
  13          extern u32          mMessage;                 //
  14          extern tCbParam   mCbParam;                 //需要发送到CB机的数据
  15          extern tSqParam   mSqParam;                 //SQ模式
  16          extern tHmSetting  mHmSetting;               //手咪上面需要设置的数据
  17          
  18          extern tSysParam    mSysParam;                //
  19          extern tFlag        mFlag;                    //
  20          extern tMenu mMenu;     
  21          extern Channel channel;
  22          extern u8 isButtonTone;
  23          extern u8 sendDtmfT;
  24          extern u8 ButtonToneTime;
  25          u8 isBK4815_Set=0;
  26          u8 isConnect=0;
  27          u8 changeDtmf=0;
  28          
  29          /*--------------手麦4815默认设置--------------------*/
  30          float RX_Freq_Hand=406.7125;
  31          u8 SqLeve_Hand=5;
  32          
  33          u8 Time_Show_POWLow=80;
  34          u8 Time_Space_POWLow_Show=200;
  35          u8 POWLow_Led_Flag=0;
  36          u16 val1;
  37          u8 isWending=0;
  38          u16 TX_LimitTime=0;
  39          
  40          extern u8 PPTpress;
  41          /*-------------------------------------------------------------------------
  42          *函数：Keys_Press_Scan  键盘扫描
  43          *参数：无  
  44          *返回值：无
  45          *-------------------------------------------------------------------------*/
  46          void Keys_Press_Scan()
  47          {
  48   1        
  49   1          IS_KEY1_PRESS();
  50   1          IS_KEY2_PRESS();
  51   1          PPT_PRESS();
  52   1          PWR_MUTE_PRESS();
  53   1          Twinkle_Control();
  54   1          Check_Scan();
C51 COMPILER V9.52.0.0   CB_LINE                                                           06/02/2018 10:26:56 PAGE 2   

  55   1          Check_DW();
  56   1          TM1722_SHOW();
  57   1          if(PPTpress==1)
  58   1          {
  59   2            
  60   2              TX_LimitTime++;       
  61   2              if(TX_LimitTime>=7000)
  62   2              {       
  63   3                while(PPT_KEY==0)
  64   3                {
  65   4                  MenuOperate(KEY_PPTUP);
  66   4                }
  67   3              }
  68   2          }
  69   1          else
  70   1          {
  71   2            TX_LimitTime=0;
  72   2          }
  73   1      }
  74          
  75          
  76          
  77          /*-------------------------------------------------------------------------
  78          *函数：SetBK4815Pragram  BK4815初使化参数
  79          *参数：无  
  80          *返回值：无
  81          *-------------------------------------------------------------------------*/
  82          void SetBK4815Pragram()
  83          {
  84   1        isBK4815_Set=0;
  85   1        channel.band=narrow;
  86   1        channel.isVOXOpen=0;
  87   1        mSq.open=0x2e;
  88   1        mSq.close=0x2a;
  89   1        mDtmfRecive.DtmfErrer=0;
  90   1      }
  91          
  92          u16 Get4815Rssi()
  93          {
  94   1        u8 i;
  95   1        u16 rssi;
  96   1        u16 snr_rssi; 
  97   1        rssi = 0;
  98   1        for(i=0; i<SNR_RSSI_CHECK_TIME; i++)
  99   1        {
 100   2          snr_rssi = BK4815RssiAndSnr();    
 101   2          rssi += snr_rssi & 0x00ff;                                                                                                                                        
 102   2          delayus(50);
 103   2        } 
 104   1        rssi /= SNR_RSSI_CHECK_TIME;   
 105   1        return rssi;
 106   1      }
 107          /*-------------------------------------------------------------------------
 108          *函数：wirelessCheckRec  4815接收强度
 109          *参数：无  
 110          *返回值：无
 111          *-------------------------------------------------------------------------*/
 112          void wirelessCheckRec(void)
 113          {
 114   1      
 115   1        u16 rssi;
 116   1        
C51 COMPILER V9.52.0.0   CB_LINE                                                           06/02/2018 10:26:56 PAGE 3   

 117   1        
 118   1        if(mFlag.SpkOpen == 0)
 119   1        {
 120   2          rssi=Get4815Rssi();
 121   2          if((rssi >= mSq.open))
 122   2          {
 123   3            if(mDtmfRecive.DtmfSussece==1)
 124   3            {
 125   4              LED_TX=OFF;
 126   4              LED_RX = ON;        
 127   4              SPK_EN = 1;       
 128   4              mFlag.SpkOpen = 1;
 129   4              LCD_RX(1);
 130   4              EnterBK4815RX();
 131   4              BK_TX2RX();
 132   4              mDtmfRecive.DtmfSussece=0;
 133   4              //delayms(50);
 134   4            }
 135   3          } 
 136   2        }
 137   1        else 
 138   1        {
 139   2          rssi=Get4815Rssi();
 140   2          if((rssi <= mSq.close))
 141   2          {
 142   3      //      delayms(100);
 143   3      //      rssi=Get4815Rssi();
 144   3      //      if((rssi <= mSq.close))
 145   3      //    {
 146   3            LCD_RX(0);
 147   3            
 148   3            if(isButtonTone==0||mHmSetting.SpkerSwitch==0)
 149   3            {
 150   4              SPK_EN=0;
 151   4            }
 152   3            LED_RX = OFF;     
 153   3            mFlag.SpkOpen = 0;
 154   3          //}
 155   3          }
 156   2        }
 157   1      }
 158          
 159          
 160          /*-------------------------------------------------------------------------
 161          *函数：CheckBatt  电池电量
 162          *参数：无  
 163          *返回值：无
 164          *-------------------------------------------------------------------------*/
 165          void CheckBatt()
 166          {
 167   1        u16 val;
 168   1        
 169   1        val=Get_BATT_AD();
 170   1        if(val<0x02d7)    //关机
 171   1        {
 172   2          BK4815Sleep();
 173   2          IDLE
 174   2          LCD_CLEAR();
 175   2          LIGHT_B=0;
 176   2          LIGHT_G=0;
 177   2          LIGHT_R=0;
 178   2          LCD_LED=0;
C51 COMPILER V9.52.0.0   CB_LINE                                                           06/02/2018 10:26:56 PAGE 4   

 179   2          LCD_LED=0;
 180   2          SPK_EN=0;
 181   2          saveAllParam();
 182   2          POW_OUT=0;
 183   2        }
 184   1        else if(val<0x02ec)
 185   1        { 
 186   2          
 187   2          if(Time_Space_POWLow_Show>0)    
 188   2          {
 189   3            Time_Space_POWLow_Show--; 
 190   3          
 191   3          }     
 192   2          else
 193   2          {
 194   3          
 195   3             LED_TX=1;
 196   3              xPWMCN |= 0x10;
 197   3            SPK_EN=1;
 198   3            isButtonTone=1;
 199   3            ButtonToneTime=BUTTON_TIME;
 200   3             delayms(100);      
 201   3            LED_TX=0;
 202   3              Time_Space_POWLow_Show=500;
 203   3          }
 204   2        }
 205   1        else
 206   1        {
 207   2          Time_Space_POWLow_Show=500;
 208   2        }
 209   1      
 210   1      
 211   1      }
 212          
 213          void close_sq()
 214          {
 215   1        if(mFlag.SpkOpen==1&&mCbParam.Sq>0)
 216   1        {
 217   2          //xPWMCN &= ~0x10;  
 218   2          //isButtonTone=0;
 219   2            if(isButtonTone==0||mHmSetting.SpkerSwitch==0)
 220   2            {
 221   3              SPK_EN=0;
 222   3            }
 223   2            LED_RX = OFF;
 224   2            LCD_RX(0);
 225   2            mFlag.SpkOpen = 0;
 226   2        }
 227   1      }
 228          /*-------------------------------------------------------------------------
 229          *函数：evenHandler  运行主程序
 230          *参数：无  
 231          *返回值：无
 232          *-------------------------------------------------------------------------*/
 233          void evenHandler()
 234          {
 235   1        u16 oldDtmfNum=0;
 236   1        float oldFreq=0;
 237   1        
 238   1        switch(mFlag.SysMode)
 239   1        {
 240   2            case SYS_MODE_LINE:
C51 COMPILER V9.52.0.0   CB_LINE                                                           06/02/2018 10:26:56 PAGE 5   

 241   2            { 
 242   3              
 243   3              if(isConnect==0)
 244   3              {         
 245   4                BK4815Sleep();
 246   4                isBK4815_Set=0;
 247   4                isWending=0;
 248   4                LED_TX=OFF;
 249   4                LCD_CLEAR();
 250   4                ShowChannel();
 251   4                if((mCbParam.Sq==0||mCbParam.Sq==0x20)&&(mHmSetting.SpkerSwitch==1)&&(mSysParam.isMute==0)&&(mHmSetti
             -ng.SpkerSwitch==1))
 252   4                {
 253   5                  LCD_RX(1);            
 254   5                  LED_RX=ON;
 255   5                  SPK_EN=1;
 256   5                }
 257   4                delayms(200);
 258   4                if(isSendCmdOK(CMD_SET_ALL))
 259   4                {
 260   5                  isConnect=1;
 261   5                }
 262   4              }
 263   3              if(isSendDtmf==1)
 264   3              {
 265   4                changeDtmf++;
 266   4                sendDtmfT=SendDtmfTime;
 267   4                isSendDtmf=0;
 268   4                if(mFlag.SpkOpen==0)
 269   4                {
 270   5                    if(mMenu.isBussy==0)
 271   5                    {
 272   6                      if(changeDtmf<5) 
 273   6                      {
 274   7                        isSendCmdOK(CMD_SET_DTMF);            
 275   7                      }
 276   6                      else
 277   6                      {
 278   7                        
 279   7                        changeDtmf=0;   
 280   7                        oldFreq=channel.RX_Freq;
 281   7                        oldDtmfNum=mDtmfRecive.dtmfCode;              
 282   7                        if(mDtmfRecive.dtmfCode<0xff)
 283   7                        {
 284   8                          mDtmfRecive.dtmfCode++;
 285   8                        }
 286   7                        else mDtmfRecive.dtmfCode=0x00;             
 287   7                       
 288   7                        if(channel.RX_Freq<400)
 289   7                        {
 290   8                          channel.RX_Freq+=0.015;
 291   8                        }
 292   7                        else channel.RX_Freq=200.015;             
 293   7                        
 294   7                        
 295   7                        if(!isSendCmdOK(CMD_SET_DTMF))
 296   7                        {             
 297   8                          mDtmfRecive.dtmfCode=oldDtmfNum;
 298   8                          channel.RX_Freq=oldFreq;
 299   8                        }   
 300   7                        
 301   7                        isSendDtmf=0;
C51 COMPILER V9.52.0.0   CB_LINE                                                           06/02/2018 10:26:56 PAGE 6   

 302   7                      }
 303   6                    }
 304   5                  }
 305   4              }
 306   3              Keys_Press_Scan();
 307   3              
 308   3              break;
 309   3            }
 310   2            case SYS_MODE_WIRELESS:
 311   2            {
 312   3              
 313   3              isConnect=0;
 314   3              if(isBK4815_Set==0)
 315   3              {         
 316   4                LED_TX=0;
 317   4                LED_RX=0;
 318   4                SPK_EN=0;
 319   4                LCD_CLEAR();
 320   4                mMenu.MenuIndex=CHANNEL;
 321   4                ShowChannel();          
 322   4                initBK4815(); 
 323   4                mFlag.SpkOpen=0;
 324   4                //BK_Reset();   
 325   4                EnterBK4815RX();
 326   4                isBK4815_Set=1;
 327   4                      
 328   4              }
 329   3              if(mRecive==MRECIVE_BK4815_INTERUPT)
 330   3              {
 331   4                BK_DTMF_RECIVE();
 332   4                mRecive=MRECIVE_NONE;
 333   4              }     
 334   3              wirelessCheckRec();   //0.6ms       
 335   3              PPT_PRESS();         //3.7us        
 336   3              PWR_MUTE_PRESS();
 337   3              wriless_button();
 338   3      
 339   3              TM1722_SHOW();     //2ms
 340   3        
 341   3              if(isWending==0)
 342   3              {
 343   4                delayms(500);
 344   4                isWending=1;
 345   4              }           
 346   3              break;
 347   3            }     
 348   2            default: break;
 349   2        }
 350   1        
 351   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    920    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
