C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEYS
OBJECT MODULE PLACED IN Keys.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Keys.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTEND 
                    -TABS(2)

line level    source

   1          #include "system.h"
   2          #include "Menu.h"
   3          #include "Keys.h"
   4          #include "memory.h"
   5          #include "lcd.h"
   6          #include "uart.h"
   7          #include "handler.h"
   8          #include "MenuEvent.h"
   9          #include "CB_Line.h"
  10          #include "TM1722.h"
  11          extern tMenu mMenu;
  12          extern tFlag mFlag;
  13          extern tSqParam   mSqParam;                 //SQ模式
  14          extern tSysParam    mSysParam;                //
  15          xdata tKey mKey;
  16          extern  key_CombleFAF;
  17          extern      key_CombleFUPAFRFGSCAN;
  18          extern      key_UnLockcount;
  19          extern      key_CombleFDN;
  20          extern      key_CombleFUPAFRFGSCAN;
  21          extern      key_CombleFUPEMG;
  22          u8 PPTpress=0;
  23          u8 LONG_UPDN_PRESS=0;
  24          
  25          u8 inDex2=0;
  26          u8 inDex1=0;
  27          u8 oldkey=0;
  28          u8 inDexMute=0;
  29          u8 scandwPPTPress=0;
  30          u8 keydelay=10;
  31          
  32          extern u8 ButtonLED;
  33          
  34          
  35          extern u8 isScanInrupt;
  36          
  37          void Check_Scan()
  38          {
  39   1        if(mSqParam.Scan==1)
  40   1        {
  41   2          return;
  42   2        }
  43   1        if(mMenu.MenuIndex!=CHANNEL_SCAN) return;
  44   1        if(isScanInrupt>0)return;
  45   1        if(mSqParam.IsAsq==0)
  46   1        {
  47   2          if(scandwPPTPress==1)
  48   2          {
  49   3            mSqParam.ScanHould=2;
  50   3            scandwPPTPress=0;
  51   3          }
  52   2          else
  53   2          {
  54   3            if(mSysParam.Rssi>=mSqParam.SqLevel)
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 2   

  55   3            {     
  56   4              mSqParam.ScanHould=2;
  57   4            } 
  58   3            else
  59   3            {
  60   4              mSqParam.ScanHould=1;
  61   4            }
  62   3          }
  63   2        }
  64   1        else
  65   1        {
  66   2          if(scandwPPTPress==1)
  67   2          {
  68   3            mSqParam.ScanHould=2;
  69   3            scandwPPTPress=0;
  70   3          }
  71   2          else
  72   2          {
  73   3            if(mSysParam.Rssi>=mSqParam.AsqLevel)
  74   3            {
  75   4              mSqParam.ScanHould=2;
  76   4            }   
  77   3            else
  78   3            {
  79   4              mSqParam.ScanHould=1;
  80   4            }
  81   3          }
  82   2        }
  83   1        
  84   1        if(mSqParam.ScanHould==1)
  85   1        {
  86   2          if(mSqParam.HouldTime>0)
  87   2          {
  88   3            mSqParam.HouldTime--;
  89   3          }
  90   2          
  91   2          if(mSqParam.HouldTime==0)
  92   2          {
  93   3            mSqParam.DisHould=1;
  94   3          }       
  95   2        }
  96   1        else
  97   1        {
  98   2          mSqParam.DisHould=0;
  99   2          mSqParam.HouldTime=HOULD_TIME;
 100   2        }
 101   1        
 102   1        if(mSqParam.DisHould==1)
 103   1        {   
 104   2           if(mSqParam.ScanDir)
 105   2           {       
 106   3              CHANNEL_UP_FUC();
 107   3              //ShowChannel();
 108   3              
 109   3           }
 110   2           else
 111   2           {
 112   3             CHANNEL_DN_FUC();            
 113   3             //ShowChannel();      
 114   3           }
 115   2        }
 116   1        isScanInrupt=SCAN_SPEED_DELAY;
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 3   

 117   1        
 118   1      }
 119          /*-------------------------------------------------------------------------
 120          *函数：CheckDW  双频守候
 121          *参数：无  
 122          *返回值：无
 123          *-------------------------------------------------------------------------*/
 124          void Check_DW()
 125          {
 126   1        u8 oldchannel=mCbParam.Channel;
 127   1        u8 oldband=mCbParam.Band;
 128   1        if(isScanInrupt>0)return;
 129   1        if(mSqParam.DWSet==2)                            //双频守候状态
 130   1        {
 131   2          if(mMenu.MenuIndex!=CHANNEL_DW) return;
 132   2          if(scandwPPTPress==1)
 133   2          {
 134   3            mSqParam.DWHould=2;
 135   3            scandwPPTPress=0;
 136   3          }
 137   2          else
 138   2          {
 139   3           if(mSqParam.IsAsq==0)                              //是否停止
 140   3           {
 141   4              if(mSysParam.Rssi>=(mSqParam.SqLevel))
 142   4              {
 143   5                mSqParam.DWHould=2;
 144   5              }
 145   4              else
 146   4              {
 147   5                mSqParam.DWHould=1;
 148   5              }
 149   4            }
 150   3            else
 151   3            {
 152   4              if(mSysParam.Rssi>=mSqParam.AsqLevel)
 153   4              {
 154   5                mSqParam.DWHould=2;
 155   5              }
 156   4              else
 157   4              {
 158   5                mSqParam.DWHould=1;
 159   5              }
 160   4            }
 161   3          }
 162   2          if(mSqParam.DWHould==1)
 163   2          {
 164   3            if(mSqParam.HouldTime>0)
 165   3            {
 166   4              mSqParam.HouldTime--;
 167   4            }
 168   3            
 169   3            if(mSqParam.HouldTime==0)
 170   3            {
 171   4              mSqParam.DisHould=1;
 172   4            }       
 173   3          }
 174   2          else
 175   2          {
 176   3            mSqParam.DisHould=0;
 177   3            mSqParam.HouldTime=HOULD_TIME;
 178   3          }
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 4   

 179   2          
 180   2          if(mSqParam.DisHould==1)                        //不停止的话切换另一频道
 181   2          {
 182   3            if(mCbParam.Channel==mSysParam.DWChannel1)
 183   3            {
 184   4              mCbParam.Channel=mSysParam.DWChannel2;
 185   4              mCbParam.Band=mSysParam.DWBand2;
 186   4              mCbParam.Modu=mSysParam.DWModu2;
 187   4            }
 188   3            else 
 189   3            {
 190   4              mCbParam.Channel=mSysParam.DWChannel1;
 191   4              mCbParam.Band=mSysParam.DWBand1;
 192   4              mCbParam.Modu=mSysParam.DWModu1;
 193   4            }
 194   3            CheckTxPower();
 195   3            if(isSendCmdOK(CMD_SET_CHANNEL))
 196   3            {   
 197   4              close_sq();
 198   4                  //saveData(EEP_CHANNEL,mCbParam.Channel);
 199   4                  //saveData(EEP_BAND,mCbParam.Band);
 200   4                  ShowChannel();      
 201   4            }
 202   3            else
 203   3            {   
 204   4              mCbParam.Channel=oldchannel;  
 205   4              mCbParam.Band=oldband;          
 206   4            }             
 207   3          }     
 208   2        }
 209   1        isScanInrupt=SCAN_SPEED_DELAY;
 210   1      }
 211          u8 Check_Key(u8 key)
 212          {
 213   1        u8 vae,vae1,vae2,vae3;
 214   1        vae=0xff;
 215   1        vae1=Get_AD(key);
 216   1        if(vae1!=0xff)
 217   1        {
 218   2          delayms(50);
 219   2          vae2=Get_AD(key);
 220   2          delayms(50);
 221   2          vae3=Get_AD(key);
 222   2          if(vae2==vae3) 
 223   2          {
 224   3            vae=vae3;
 225   3            ButtonLED=BUTTON_LED_TIME;
 226   3          }
 227   2          else
 228   2          {
 229   3            delayms(50);
 230   3            vae2=Get_AD(key);
 231   3            delayms(50);
 232   3            vae3=Get_AD(key);
 233   3            if(vae2==vae3)
 234   3            {
 235   4              vae=vae3;
 236   4              ButtonLED=BUTTON_LED_TIME;
 237   4            }
 238   3          }
 239   2        }
 240   1        return vae;
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 5   

 241   1      }
 242          /*-------------------------------------------------------------------------
 243          *函数：IS_KEY1_PRESS  Key1按键源
 244          *参数：无  
 245          *返回值：无
 246          *-------------------------------------------------------------------------*/
 247          void IS_KEY1_PRESS(void)
 248          { 
 249   1        u8 vae= Check_Key(Key1);
 250   1        switch(vae) 
 251   1        {
 252   2          case 0x0F:
 253   2            MenuOperate(KEY_SCAN);
 254   2            break;
 255   2          case 0x06:
 256   2            inDex1=RFG;
 257   2            if(mKey.ShortPressLimit1>0) mKey.ShortPressLimit1--;      
 258   2            break;
 259   2          case 0x0D:
 260   2            inDex1=UP;
 261   2            if(LONG_UPDN_PRESS<8)LONG_UPDN_PRESS++;
 262   2            if(LONG_UPDN_PRESS==8)
 263   2            {     
 264   3              MenuOperate(KEY_LONGUP);
 265   3            }     
 266   2            if(mKey.ShortPressLimit1>0) mKey.ShortPressLimit1--;
 267   2            break;
 268   2          case 0x0A:
 269   2            inDex1=DN;
 270   2            if(LONG_UPDN_PRESS<8)LONG_UPDN_PRESS++;
 271   2            if(LONG_UPDN_PRESS==8)
 272   2            {       
 273   3              MenuOperate(KEY_LONGDN);
 274   3            }
 275   2            if(mKey.ShortPressLimit1>0) mKey.ShortPressLimit1--;
 276   2            break;
 277   2          case 0x03:
 278   2            inDex1=AF;
 279   2            if(mKey.ShortPressLimit1>0) mKey.ShortPressLimit1--;  
 280   2            if(mKey.ShortPressLimit1==0)
 281   2            {
 282   3              MenuOperate(KEY_LONG_AF); 
 283   3              while(Get_AD(Key1)==0x03);
 284   3            }
 285   2            break;
 286   2          case 0x0B:
 287   2            inDex1=SQ;
 288   2            if(mKey.ShortPressLimit1>0) mKey.ShortPressLimit1--;
 289   2            if(mKey.LongSq_Time>0) mKey.LongSq_Time--;
 290   2            if(mKey.LongSq_Time==0)          //长按3秒
 291   2            {
 292   3              MenuOperate(KEY_LONG_SQ);
 293   3              mKey.LongSq_Time=15;
 294   3            }
 295   2            break;
 296   2          default:
 297   2            if((mKey.ShortPressLimit1>0) && (mKey.ShortPressLimit1<15)) 
 298   2            {
 299   3              switch(inDex1)              //短按
 300   3              {
 301   4                case SCAN:
 302   4                  
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 6   

 303   4                  break;
 304   4                case RFG:
 305   4                  MenuOperate(KEY_RFG);
 306   4                  break;
 307   4                case UP:
 308   4                  if(LONG_UPDN_PRESS<8)
 309   4                  {
 310   5                    LONG_UPDN_PRESS=0;
 311   5                    MenuOperate(KEY_UP);
 312   5                  }
 313   4                  LONG_UPDN_PRESS=0;
 314   4                  break;
 315   4                case DN:
 316   4                  if(LONG_UPDN_PRESS<8)
 317   4                  {
 318   5                    LONG_UPDN_PRESS=0;
 319   5                    MenuOperate(KEY_DN);
 320   5                  }
 321   4                  LONG_UPDN_PRESS=0;
 322   4                  break;
 323   4                case AF:
 324   4                  MenuOperate(KEY_AF);
 325   4                  break;
 326   4                case SQ:
 327   4                  MenuOperate(KEY_SQ);
 328   4                  break;        
 329   4                default:
 330   4                  break;
 331   4              }
 332   3            }
 333   2            else if(mKey.ShortPressLimit1==0)
 334   2            {
 335   3              switch(inDex1)            //长按
 336   3              {
 337   4                case SCAN:            
 338   4                  break;
 339   4                case RFG:
 340   4                  
 341   4                  break;
 342   4                case UP:
 343   4                
 344   4                  break;
 345   4                case DN:
 346   4          
 347   4                  break;
 348   4                case AF:
 349   4                  
 350   4                  break;
 351   4                case SQ:
 352   4                
 353   4                  break;          
 354   4                default:
 355   4                  break;
 356   4              }     
 357   3            }
 358   2            mKey.ShortPressLimit1=15;
 359   2            mKey.KeyIndex1=0;
 360   2            mKey.LongSq_Time=20;
 361   2            break;      
 362   2        } 
 363   1      }
 364          
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 7   

 365          /*-------------------------------------------------------------------------
 366          *函数：IS_KEY2_PRESS  Key2按键源
 367          *参数：无  
 368          *返回值：无
 369          *-------------------------------------------------------------------------*/
 370          void IS_KEY2_PRESS(void)
 371          { 
 372   1        u8 keyvalee=Check_Key(Key2);
 373   1        
 374   1        
 375   1        if(mKey.DoublePress_Limit>0)
 376   1        {
 377   2          mKey.DoublePress_Limit--;
 378   2        }
 379   1        if(mKey.DoublePress_Limit==0)                                            //按F
 380   1        {
 381   2          oldkey=0;
 382   2        }
 383   1      
 384   1        if(mMenu.MenuIndex!=CHANNEL&&mMenu.MenuIndex!=CHANNEL_FAF&&mMenu.MenuIndex!=CHANNEL_FUPAFRFGSCAN&&mMenu.
             -MenuIndex!=CHANNEL_DW&&mMenu.MenuIndex!=CHANNEL_SCAN&& mMenu.MenuIndex!=CHANNEL_DOUBLEF&&mMenu.MenuIndex!=CHANNEL_SQ_SET
             -&&mMenu.MenuIndex!=CHANNEL_FRECAL&&mMenu.MenuIndex!=CHANNEL_PPTDN)       //不返回主界面的菜单
 385   1        {
 386   2          
 387   2          mMenu.Back_Channel_Time--;
 388   2          if(mMenu.Back_Channel_Time==0)
 389   2          {
 390   3            if(mMenu.isLock==0&&mMenu.isTx==0)
 391   3            {
 392   4              mMenu.MenuIndex=mMenu.BackMenuIndex;              //返回
 393   4              mFlag.InMainFace = 0;
 394   4              CHANNEL_FUC();
 395   4              saveMenuParam();  
 396   4              saveAllParam();       
 397   4            }
 398   3            else if(mMenu.isLock==1)
 399   3            {
 400   4              mMenu.MenuIndex=mMenu.BackMenuIndex;              //返回
 401   4              mFlag.InMainFace = 0;
 402   4              CHANNEL_FUC();
 403   4              LCD_LOCK(1);
 404   4              saveMenuParam();  
 405   4              saveAllParam(); 
 406   4            }
 407   3            mMenu.Back_Channel_Time=BACK_TIME;
 408   3          }
 409   2        }
 410   1        if(mSysParam.isKeyCombo==1)
 411   1        {
 412   2          mSysParam.KeyComboLimit--;
 413   2          if(mSysParam.KeyComboLimit==0)
 414   2          {
 415   3            key_CombleFAF=0;
 416   3            key_CombleFUPAFRFGSCAN=0;
 417   3            key_UnLockcount=0;
 418   3            key_CombleFDN=0;
 419   3            key_CombleFUPAFRFGSCAN=0;
 420   3            key_CombleFUPEMG=0;
 421   3          }
 422   2        }
 423   1        switch(keyvalee)  
 424   1        {   
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 8   

 425   2        
 426   2          case 0x0a:
 427   2            inDex2=EMG;
 428   2            if( mKey.ShortPressLimit2>0) mKey.ShortPressLimit2--;
 429   2            break;
 430   2          case 0x0D:
 431   2            inDex2=F; 
 432   2          
 433   2            if( mKey.ShortPressLimit2>0)  mKey.ShortPressLimit2--;
 434   2            if(mKey.ShortPressLimit2==0)     //长按1次F
 435   2            {
 436   3              MenuOperate(KEY_LONG_F);      
 437   3            }       
 438   2            break;
 439   2          case 0x0B:
 440   2            MenuOperate(KEY_DW);
 441   2            while(Get_AD(Key2)==0x0B);
 442   2            break;
 443   2          case 0x06:
 444   2            inDex2=VOL_DN;      
 445   2          
 446   2            MenuOperate(KEY_VOL_DN);      
 447   2            break;
 448   2          case 0x03:
 449   2            inDex2=VOL_UP;      
 450   2          
 451   2            MenuOperate(KEY_VOL_UP);
 452   2          
 453   2            if( mKey.ShortPressLimit2>0)  mKey.ShortPressLimit2--;
 454   2            break;    
 455   2          default:
 456   2            if(( mKey.ShortPressLimit2>0) && ( mKey.ShortPressLimit2<15)) 
 457   2            {
 458   3              switch(inDex2)              //短按
 459   3              {         
 460   4                case EMG:
 461   4                  MenuOperate(KEY_EMG);
 462   4                  break;
 463   4                case F:
 464   4                  MenuOperate(KEY_F);
 465   4                  mKey.DoublePress_Limit=3;
 466   4                  break;
 467   4                case DW:
 468   4                  
 469   4                  break;
 470   4                case VOL_DN:          
 471   4                    
 472   4                  break;
 473   4                case VOL_UP:            
 474   4                  break;
 475   4                default:
 476   4                  break;
 477   4              }
 478   3              mKey.ShortPressLimit2=10;
 479   3            }
 480   2            else if( mKey.ShortPressLimit2==0)
 481   2            {
 482   3              switch(inDex2)            //长按
 483   3              {         
 484   4                case EMG:
 485   4                  
 486   4                  break;
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 9   

 487   4                case F:
 488   4                  MenuOperate(KEY_LONG_F);
 489   4                  break;
 490   4                case DW:
 491   4                
 492   4                  break;
 493   4                case VOL_DN:
 494   4                  
 495   4                  break;
 496   4                case VOL_UP:
 497   4                
 498   4                  break;
 499   4                default:
 500   4                  break;
 501   4              }
 502   3              
 503   3              
 504   3              
 505   3              
 506   3            }     
 507   2             mKey.ShortPressLimit2=15;
 508   2            inDex2=0;
 509   2            break;      
 510   2        } 
 511   1      }
 512          /*-------------------------------------------------------------------------
 513          *函数：PPT_PRESS  PPT按键源
 514          *参数：无  
 515          *返回值：无
 516          *-------------------------------------------------------------------------*/
 517          void PPT_PRESS(void)
 518          {
 519   1        u16 i=0;
 520   1        if(PPT_KEY==0)  
 521   1        { 
 522   2          ButtonLED=BUTTON_LED_TIME;
 523   2          PPTpress=1;
 524   2          MenuOperate(KEY_PPTDN);
 525   2          
 526   2      //    while(PPT_KEY==0)
 527   2      //    {
 528   2      //      i++;
 529   2      //      delayms(1);
 530   2      //      if(i>=3000)
 531   2      //      {
 532   2      //        i=0;
 533   2      //        TX_LimitTime++;
 534   2      //        delayms(1);
 535   2      //        if(TX_LimitTime>=20)
 536   2      //        {
 537   2      //          MenuOperate(KEY_PPTUP);
 538   2      //        }
 539   2      //      }
 540   2      //      
 541   2      //    }
 542   2        }
 543   1        else
 544   1        {   
 545   2          
 546   2          if(PPTpress==1)
 547   2          {
 548   3            MenuOperate(KEY_PPTUP);
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 10  

 549   3            
 550   3            PPTpress=0;
 551   3            
 552   3          }
 553   2        }
 554   1      }
 555          /*-------------------------------------------------------------------------
 556          *函数：PWR_MUTE_PRESS  PWR/MUTE按键源
 557          *参数：无  
 558          *返回值：无
 559          *-------------------------------------------------------------------------*/
 560          void PWR_MUTE_PRESS(void)
 561          { 
 562   1        if(mKey.MuteDoublePress_Timelimit>0)
 563   1        {
 564   2          mKey.MuteDoublePress_Timelimit--;
 565   2        }
 566   1        else 
 567   1        {
 568   2          mKey.Press_Count=0;
 569   2        }
 570   1        if(POW_IN)
 571   1        {
 572   2          inDexMute=1;
 573   2          ButtonLED=BUTTON_LED_TIME;
 574   2          if(mKey.MutePress_Timelimit>0)
 575   2          {
 576   3            mKey.MutePress_Timelimit--;
 577   3          }
 578   2          if(mKey.MutePress_Timelimit==0)      //长按
 579   2          {
 580   3            MenuOperate(KEY_LONG_POWER);  
 581   3            mKey.MutePress_Timelimit=150;
 582   3            inDexMute=0;
 583   3          }     
 584   2          //while(POW_IN);
 585   2        }
 586   1        else
 587   1        {
 588   2          if(inDexMute==1)
 589   2          {
 590   3            if(mFlag.SysMode == SYS_MODE_LINE)
 591   3            {
 592   4              playButtonTone();
 593   4              if(mKey.Press_Count==0)
 594   4              {
 595   5                mKey.Press_Count=1;
 596   5                mKey.MuteDoublePress_Timelimit=60;
 597   5              }
 598   4              else if(mKey.Press_Count==1)
 599   4              {
 600   5                MenuOperate(KEY_DOUBLE_MUTE);
 601   5                mKey.Press_Count=0;
 602   5                mKey.MuteDoublePress_Timelimit=0;
 603   5              } 
 604   4              inDexMute=0;
 605   4            }
 606   3          }
 607   2          mKey.MutePress_Timelimit=150;
 608   2        }
 609   1        
 610   1      }
C51 COMPILER V9.52.0.0   KEYS                                                              06/02/2018 10:26:50 PAGE 11  

 611          
 612          /*-------------------------------------------------------------------------
 613          *函数：InitKey  按键参数初使化
 614          *参数：无  
 615          *返回值：无
 616          *-------------------------------------------------------------------------*/
 617          void InitKey()
 618          {
 619   1        mKey.KeyIndex1=0;
 620   1        mKey.KeyIndex2=0;
 621   1        mKey.ShortPressLimit1=15;
 622   1        mKey.ShortPressLimit2=15;
 623   1        mKey.Power_Time=20;
 624   1        mKey.DoublePress_Limit=60;
 625   1        mKey.DoublePress_Count=0;
 626   1        mKey.Press_Count=0;
 627   1        
 628   1        mKey.MutePress_Timelimit=150;
 629   1        mKey.LongSq_Time=15;
 630   1        mKey.MutePress_Count=0;
 631   1        mKey.MuteDoublePress_Timelimit=60;
 632   1        mMenu.Back_Channel_Time=BACK_TIME;
 633   1        
 634   1        mSysParam.KeyComboLimit=KEY_COMBOlIMIT;
 635   1        mSysParam.isKeyCombo=0;
 636   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1794    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     20       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
