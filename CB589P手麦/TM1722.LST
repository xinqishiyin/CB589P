C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TM1722
OBJECT MODULE PLACED IN TM1722.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TM1722.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          #include "system.h"
   2          #include "TM1722.h"
   3          
   4          
   5          u8 SEGDATA[]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
   6          
   7          
   8          //国家LCD 编码
   9          uchar xdata country_ecode[14][4] =  
  10          {
  11            {0x87,0x01,0x05,0x70},//EU
  12            {0x85,0x01,0x47,0x12},//CE
  13            {0x05,0x07,0x07,0x05},//UK
  14            {0x87,0x04,0x05,0x10},//PL
  15            {0xD0,0x01,0x45,0x70},//I0
  16            {0xD0,0x01,0x43,0x52},//I2
  17            {0x03,0x07,0x47,0x12},//DE
  18            {0xD0,0x01,0x25,0x61},//IN
  19            {0xA7,0x04,0x05,0x70},//RU
  20            {0x87,0x04,0x45,0x10},//PC
  21            {0x87,0x04,0x30,0x05},//PX
  22            {0x87,0x06,0x05,0x70},//AU
  23            {0x03,0x02,0x05,0x10},//NL
  24            {0x87,0x06,0x25,0x64},//AM  错位显示
  25          };
  26          //数字1字符                                                                   L    R    P    C    B    D  
             -  S    F    E    H
  27          code const u8 NUM1_ADD1[]={0x5f,0x50,0x6b,0x79,0x74,0x3d,0x3f,0x58,0x7f,0x7d,0x07,0x22,0x6e,0x0f,0x37,0x73
             -,0x3d,0x2e,0x2f,0x76,0x00};
  28          
  29          //数字2字符                                                                   R    P    C    B    Q    T  
             -  A    F    L    -
  30          code const u8 NUM2_ADD2[]={0x5f,0x50,0x6b,0x79,0x74,0x3d,0x3f,0x58,0x7f,0x7d,0x22,0x6e,0x0f,0x37,0x7c,0x27
             -,0x7e,0x73,0x07,0x20,0x00};
  31          
  32          
  33          //数字3字符                                                                   A    B    C    D    E    F  
             -  G    H    I    L    O    P    UP+  UP-   DN+  DN-  -
  34          code const u8 NUM3_ADD3[]={0x5f,0x50,0x6b,0x79,0x74,0x3d,0x3f,0x58,0x7f,0x7d,0x7e,0x37,0x0f,0x73,0x2f,0x2e
             -,0x7d,0x76,0x50,0x07,0x5f,0x6e,0x04,0x024,0x02,0x22,0x20,0x00};
  35          
  36          
  37          //数字4字符                                                                   S    A    F    O    E    C  
             -  P    I    D    R    M    T
  38          code const u8 NUM4_ADD4[]={0x85,0x00,0x83,0x82,0x06,0x86,0x87,0x80,0x87,0x86,0x86,0x87,0X87,0x85,0x87,0x85
             -,0x87,0x0d,0x30,0xa7,0xd5,0xd0,0x00};
  39          
  40          code const u8 NUM4_ADD5[]={0x07,0x06,0x05,0x07,0x06,0x03,0x03,0x06,0x07,0x07,0x03,0x06,0x00,0x07,0x01,0x01
             -,0x04,0x01,0x07,0x04,0x06,0x00,0x00};
  41          
  42          
  43          
  44          
  45          //数字5字符                                                                   Q    N    U    E    L    0  
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 2   

             -  X    C    F    B    R
  46          code const u8 NUM5_ADD6[]={0x45,0x00,0x43,0x42,0x06,0x46,0x47,0x40,0x47,0x46,0x46,0x25,0x50,0x74,0x50,0x45
             -,0x03,0x54,0x47,0x07,0x47,0x00};
  47          
  48          code const u8 NUM5_ADD7[]={0x70,0x60,0x52,0x72,0x62,0x32,0x32,0x60,0x72,0x72,0x62,0x61,0x70,0x10,0x10,0x70
             -,0x50,0x10,0x02,0x32,0x43,0x00};
  49          
  50          
  51          
  52          //接收指示
  53          const u8 RX_ADD2=0x80;
  54          
  55          //发射指示
  56          const u8 TX_ADD5=0x08;
  57          
  58          //EMG指示
  59          const u8 EMG_ADD6=0x80;
  60          
  61          //SC指示
  62          const u8 SC_ADD7=0x80;
  63          
  64          //LOW指示
  65          const u8 LOW_ADD8=0x08;
  66          
  67          //DW
  68          const u8 DW_ADD8=0x04;
  69          
  70          //FM
  71          const u8 FM_ADD3=0x80;
  72          
  73          //AM
  74          const u8 AM_ADD4=0x08;
  75          
  76          //PS
  77          const u8 PS_ADD6=0x08;
  78          
  79          //LOCK
  80          const u8 LOCK_ADD7=0x08;
  81          
  82          //BATT
  83          const u8 BATT_ADD8=0x02;
  84          
  85          //ASQ
  86          const u8 ASQ_ADD8=0x01;
  87          
  88          //场强指示
  89          const u8 STRENGTH_LEVEL1_ADD1=0x80;
  90          const u8 STRENGTH_LEVEL2_ADD8=0x80;
  91          const u8 STRENGTH_LEVEL3_ADD8=0x10;
  92          const u8 STRENGTH_LEVEL4_ADD8=0x20;
  93          const u8 STRENGTH_LEVEL5_ADD8=0x40;
  94          
  95          
  96          //写入字
  97          void TM1722_Write_Byte(u8 dat)
  98          {
  99   1          u8 i;
 100   1          delayus(2);
 101   1          LCD_EN=0;
 102   1          for(i=0;i<8;i++)
 103   1          {
 104   2              LCD_CLK=0;
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 3   

 105   2              LCD_DAT=dat&0X01;
 106   2              LCD_CLK=1;
 107   2              dat>>=1;
 108   2          }
 109   1          delayus(2);
 110   1      }
 111          //写入数据
 112          void TM1722_Write_Word(u8 adress,u8 dat)
 113          {
 114   1         
 115   1         LCD_EN=1;
 116   1         TM1722_Write_Byte(0x40);
 117   1         LCD_EN=1;
 118   1         TM1722_Write_Byte(0xc0+adress); //写入地址   
 119   1         TM1722_Write_Byte(dat);   //写入数据   
 120   1         LCD_EN=1;
 121   1      }
 122          void TM1722_Write_String(u8 addr,u8 count)
 123          {
 124   1        u8 i;
 125   1        LCD_EN=1;
 126   1        TM1722_Write_Byte(0x40);
 127   1        LCD_EN=1;
 128   1        TM1722_Write_Byte(0xc0+addr);
 129   1        for(i=0;i<count;i++)
 130   1        {    
 131   2           TM1722_Write_Byte(0xff);
 132   2           
 133   2        }
 134   1        LCD_EN=1;
 135   1      }
 136          
 137          /*****************************************
 138          函数：TM1722_Init() LCD初使化
 139          参数：无
 140          返回值：无
 141          *****************************************/
 142          void TM1722_Init()
 143          {  
 144   1        delayus(2);
 145   1        LCD_EN=1;
 146   1        LCD_CLK=1;
 147   1        LCD_DAT=1;
 148   1        
 149   1         TM1722_Write_Byte(0x00); //设置工作模式
 150   1         LCD_EN=1; 
 151   1         TM1722_Write_Byte(0x97);//显示开
 152   1         LCD_EN=1;
 153   1         //TM1722_Write_String(0,16);
 154   1        SEGDATA[0]=0xff;
 155   1        SEGDATA[1]=0xff;
 156   1        SEGDATA[2]=0xff;
 157   1        SEGDATA[3]=0xff;
 158   1        SEGDATA[4]=0xff;
 159   1        SEGDATA[5]=0xf7;
 160   1        SEGDATA[6]=0xff;
 161   1        SEGDATA[7]=0xff;
 162   1        
 163   1        TM1722_SHOW();
 164   1      }
 165          
 166          
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 4   

 167          /*****************************************
 168          函数：LCD_NUM1(uchar i) 设置第一个数字显示
 169          参数：i  0-9：0-9 
 170          返回值：无
 171          *****************************************/
 172          void LCD_NUM1(u8 i)
 173          {
 174   1        SEGDATA[0]=SEGDATA[0]&0x80; 
 175   1        SEGDATA[0]=SEGDATA[0]|NUM1_ADD1[i];
 176   1        
 177   1        
 178   1      }
 179          
 180          /*****************************************
 181          函数：LCD_NUM2(uchar i) 设置第二个数字显示
 182          参数：i  0-9：0-9 
 183          返回值：无
 184          *****************************************/
 185          void LCD_NUM2(u8 i)
 186          {
 187   1        SEGDATA[1]=SEGDATA[1]&0x80;
 188   1        SEGDATA[1]=SEGDATA[1]|NUM2_ADD2[i]; 
 189   1      
 190   1      }
 191          
 192          /*****************************************
 193          函数：LCD_NUM3(uchar i) 设置第三个数字显示
 194          参数：i  0-9：0-9 
 195          返回值：无
 196          *****************************************/
 197          void LCD_NUM3(u8 i)
 198          {
 199   1        SEGDATA[2]=SEGDATA[2]&0x80;
 200   1        SEGDATA[2]=SEGDATA[2]|NUM3_ADD3[i]; 
 201   1      
 202   1      }
 203          
 204          /*****************************************
 205          函数：LCD_NUM4(uchar i) 设置第四个数字显示
 206          参数：i  0-9：0-9 
 207          返回值：无
 208          *****************************************/
 209          void LCD_NUM4(u8 i)
 210          {
 211   1        SEGDATA[3]=SEGDATA[3]&0x08;
 212   1        SEGDATA[3]=SEGDATA[3]|NUM4_ADD4[i]; 
 213   1        
 214   1        SEGDATA[4]=SEGDATA[4]&0x08;
 215   1        SEGDATA[4]=SEGDATA[4]|NUM4_ADD5[i]; 
 216   1        
 217   1      }
 218          
 219          
 220          /*****************************************
 221          函数：LCD_NUM5(uchar i) 设置第五个数字显示
 222          参数：i  0-9：0-9 
 223          返回值：无
 224          *****************************************/
 225          void LCD_NUM5(u8 i)
 226          {
 227   1        SEGDATA[5]=SEGDATA[5]&0x88;
 228   1        SEGDATA[5]=SEGDATA[5]|NUM5_ADD6[i];
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 5   

 229   1        
 230   1        SEGDATA[6]=SEGDATA[6]&0x88;
 231   1        SEGDATA[6]=SEGDATA[6]|NUM5_ADD7[i];
 232   1      
 233   1      }
 234          
 235          /*****************************************
 236          函数：LCD_RX(uchar i) 设置接收指示
 237          参数：i  0：不显示 1：显示
 238          返回值：无
 239          *****************************************/
 240          void LCD_RX(u8 i)
 241          {
 242   1        SEGDATA[1]=i==1? (SEGDATA[1]|RX_ADD2):(SEGDATA[1]&~RX_ADD2);
 243   1        
 244   1      }
 245          
 246          /*****************************************
 247          函数：LCD_TX(uchar i) 设置发射指示
 248          参数：i  0：不显示 1：显示
 249          返回值：无
 250          *****************************************/
 251          void LCD_TX(u8 i)
 252          {
 253   1        SEGDATA[4]=i==1? (SEGDATA[4]|TX_ADD5):(SEGDATA[4]&~TX_ADD5);
 254   1      
 255   1      }
 256          
 257          
 258          /*****************************************
 259          函数：LCD_EMG(u8 i) 设置功率指示
 260          参数：i  0： 1：显示
 261          返回值：无
 262          *****************************************/
 263          void LCD_EMG(u8 i)
 264          {
 265   1        SEGDATA[5]= i==1?(SEGDATA[5]|EMG_ADD6):(SEGDATA[5]&~EMG_ADD6);
 266   1      
 267   1      }
 268          /*****************************************
 269          函数：LCD_SCAND(uchar i) 设置扫描指示
 270          参数：i  0： 1：
 271          返回值：无
 272          *****************************************/
 273          void LCD_SCAN(u8 i)
 274          {
 275   1        SEGDATA[6]=i==1?(SEGDATA[6]|SC_ADD7):(SEGDATA[6]&~SC_ADD7);
 276   1      
 277   1      }
 278          
 279          /*****************************************
 280          函数：LCD_LOW(uchar i) 设置扫描指示
 281          参数：i  0：不显示 1：显示
 282          返回值：无
 283          *****************************************/
 284          void LCD_LOW(u8 i)
 285          {
 286   1        SEGDATA[7]=i==1? (SEGDATA[7]|LOW_ADD8):(SEGDATA[7]&~LOW_ADD8);
 287   1      
 288   1      }
 289          
 290          /*****************************************
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 6   

 291          函数：LCD_DW(uchar i) 
 292          参数：i  0： 1：
 293          返回值：无
 294          *****************************************/
 295          void LCD_DW(u8 i)
 296          {
 297   1        SEGDATA[7]=i==1? (SEGDATA[7]|DW_ADD8):(SEGDATA[7]&~DW_ADD8);
 298   1        
 299   1      }
 300          /*****************************************
 301          函数：LCD_BATT(uchar i) 
 302          参数：i  0： 1：
 303          返回值：无
 304          *****************************************/
 305          void LCD_BATT(u8 i)
 306          {
 307   1        SEGDATA[7]=i==1? (SEGDATA[7]|BATT_ADD8):(SEGDATA[7]&~BATT_ADD8);
 308   1      }
 309          
 310          /*****************************************
 311          函数：LCD_FM(uchar i) 设置中继功能指示
 312          参数：i  0：不显示 1：显示
 313          返回值：无
 314          *****************************************/
 315          void LCD_FM(u8 i)
 316          {
 317   1        SEGDATA[2]=i==1?(SEGDATA[2]|FM_ADD3):(SEGDATA[2]&~FM_ADD3);
 318   1        
 319   1      }
 320          
 321          /*****************************************
 322          函数：LCD_AM(uchar i) 
 323          参数：i  0：不显示 1：显示
 324          返回值：无
 325          *****************************************/
 326          void LCD_AM(u8 i)
 327          {
 328   1        SEGDATA[3]=i==1?(SEGDATA[3]|AM_ADD4):(SEGDATA[3]&~AM_ADD4);
 329   1        
 330   1      }
 331          
 332          /*****************************************
 333          函数：LCD_PS(uchar i) 
 334          参数：i  0：不显示 1：显示
 335          返回值：无
 336          *****************************************/
 337          void LCD_PS(u8 i)
 338          {
 339   1        SEGDATA[5]=i==1?(SEGDATA[5]|PS_ADD6):(SEGDATA[5]&~PS_ADD6);
 340   1        
 341   1      }
 342          
 343          
 344          void LCD_LOCK(u8 i)
 345          {
 346   1        SEGDATA[6]=i==1?(SEGDATA[6]|LOCK_ADD7):(SEGDATA[6]&~LOCK_ADD7);
 347   1        
 348   1      }
 349          
 350          
 351          
 352          
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 7   

 353          
 354          void LCD_ASQ(u8 i)
 355          {
 356   1        SEGDATA[7]=i==1?(SEGDATA[7]|ASQ_ADD8):(SEGDATA[7]&~ASQ_ADD8);
 357   1        
 358   1      }
 359          
 360          /*****************************************
 361          函数：LCD_STRENGTH(uchar i) 设置场强指示
 362          参数：i  0：不显示 1：一级 2：二级 3：三级 4：四级 5：五级
 363          返回值：无
 364          *****************************************/
 365          void LCD_STRENGTH(u8 i)
 366          {
 367   1        switch(i)
 368   1        {
 369   2          case 0:
 370   2            SEGDATA[0]= SEGDATA[0]&~STRENGTH_LEVEL1_ADD1;
 371   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL2_ADD8;
 372   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL3_ADD8;
 373   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 374   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 375   2            break;
 376   2          case 1:
 377   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 378   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL2_ADD8;
 379   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL3_ADD8;
 380   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 381   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 382   2            break;
 383   2          case 2:
 384   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 385   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 386   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL3_ADD8;
 387   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 388   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 389   2            break;
 390   2          case 3:
 391   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 392   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 393   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL3_ADD8;
 394   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 395   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 396   2            break;
 397   2          case 4:
 398   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 399   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 400   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL3_ADD8;
 401   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL4_ADD8;
 402   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 403   2            break;
 404   2          case 5:
 405   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 406   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 407   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL3_ADD8;
 408   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL4_ADD8;
 409   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL5_ADD8;
 410   2            break;
 411   2        } 
 412   1      
 413   1      }
 414          
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 8   

 415          void LCD_CLEAR()
 416          {
 417   1        u8 i ;
 418   1        for(i=0;i<8;i++)
 419   1        {
 420   2          if(i==7&&VCC_BATT==0&&mFlag.SysMode == SYS_MODE_LINE)
 421   2          {
 422   3            SEGDATA[i]=0x02;              //BATT 充电时不清
 423   3          }
 424   2          else
 425   2          {
 426   3            SEGDATA[i]=0x00;
 427   3          }
 428   2        } 
 429   1        
 430   1      }
 431          
 432          void ShowContry(u8 i)
 433          {
 434   1        SEGDATA[3]=country_ecode[i][0];
 435   1        SEGDATA[4]=country_ecode[i][1];
 436   1        SEGDATA[5]=country_ecode[i][2];
 437   1        SEGDATA[6]=country_ecode[i][3];
 438   1        TM1722_SHOW();
 439   1      }
 440          
 441          
 442          
 443          /*****************************************
 444          函数：TM1722_SHOW() 显示LCD
 445          参数：无
 446          返回值：无
 447          *****************************************/
 448          void TM1722_SHOW()
 449          { 
 450   1        TM1722_Write_Word(0x02,SEGDATA[0]);
 451   1        delayms(1);
 452   1        
 453   1        TM1722_Write_Word(0x03,SEGDATA[1]);
 454   1         delayms(1);
 455   1      
 456   1        TM1722_Write_Word(0x06,SEGDATA[2]);
 457   1        delayms(1);
 458   1      
 459   1        TM1722_Write_Word(0x07,SEGDATA[3]);
 460   1        delayms(1);
 461   1      
 462   1        TM1722_Write_Word(0x0a,SEGDATA[4]);
 463   1        delayms(1);
 464   1      
 465   1        TM1722_Write_Word(0x0b,SEGDATA[5]);
 466   1        delayms(1); 
 467   1          
 468   1        TM1722_Write_Word(0x0e,SEGDATA[6]);
 469   1        delayms(1);
 470   1      
 471   1        TM1722_Write_Word(0x0f,SEGDATA[7]);
 472   1        delayms(1); 
 473   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.52.0.0   TM1722                                                            06/02/2018 10:26:50 PAGE 9   

   CODE SIZE        =   1436    ----
   CONSTANT SIZE    =    160    ----
   XDATA SIZE       =     81       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
