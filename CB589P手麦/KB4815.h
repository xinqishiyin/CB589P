#define KB4815_H
#ifdef KB4815_H

#define DB120	0x23
#define DB118	0x26

#define SNR		8
#define DB_ERR	1 

/*---------------端口定义----------------------*/
#define BK4815_PIO0          P35

#define OUT_BK4815_SDA       P36
#define IN_BK4815_SDA        P36
#define BK4815_SCN           P37
#define BK4815_SCK           P00
#define BK4815_INIT          P01
#define OUT_APC              P27
#define OPEN_APC		xPWMCN |= 0x20
#define CLOSE_APC		xPWMCN &= ~0x20

#define OPEN_RX              {P34=1;P22=0;}
#define OPEN_TX              {P34=0;P22=1;}
#define IDLE                 {P34=1;P22=1;}
#define KB4815_SDA_ToInt     {P3MDH &= 0xCF; P3MDH |= 0x10;}
#define KB4815_SDA_ToOut     {P3MDH &= 0xCF; P3MDH |= 0x20;}

/*-------------------------------------------------------------------------
 *      宽窄带
 *-----------------------------------------------------------------------*/
typedef enum
{
  wide,
  narrow
}Channel_band ;      

/*-------------------------------------------------------------------------
 *      信号类型
 *-----------------------------------------------------------------------*/
typedef enum 
{
  SPEECH,
  DTMF,
  SELCALL,
  FSK,
  CTCSS,
  CDCSS  
}Signaltype; 

/*-------------------------------------------------------------------------
 *      亚音频类型
 *-----------------------------------------------------------------------*/
typedef enum
{
  NONE,
  CTCS,
  CDCS
}CTCSType; 

/*-------------------------------------------------------------------------
 *      数字亚音频相位
 *-----------------------------------------------------------------------*/
typedef enum 
{
		Normal=0,
		Inverse=1
}CDC_MODE;

/*-------------------------------------------------------------------------
 *      通道信息
 *-----------------------------------------------------------------------*/
typedef struct
{
	Channel_band band;                //宽窄带 wide为宽 narrow为窄 	
	
	u8 isVOXOpen;											//是否开启VOX
	u8 VOXLevel;											//VOX等级        0-256
	u8 VOX_Gain_Level;                //VOX麦克风增益   0-64
	u8 Sqleve;                        //SQ等级
	
  float TX_Freq;									  //发射频率
  CTCSType TXCTCStype;              //亚音频类型
  float TX_CTCSS_Freq;						  //发射模拟亚音频率
	CDC_MODE TX_CDCS_Mode;            //发射数字亚音频正反相
  u16 TX_CDCSS_Freq;							  //发射数字亚音频率
		
	
  float RX_Freq;                    //接收频率
  CTCSType RXCTCStype;					    //接收亚音频类型
  float RX_CTCSS_Freq;							//接收模拟亚音频率
  CDC_MODE RX_CDCS_Mode;				    //接收数字亚音频正反相
	u16 RX_CDCSS_Freq;                //接收数字亚音频率
	
	
}Channel; 

/*-------------------------------------------------------------------------
*函数：initKB4815  4815初使化设置
*参数：无
*返回值：无
*-------------------------------------------------------------------------*/
void initBK4815(void);
/*-------------------------------------------------------------------------
*函数：BK4815RxAudio  待接收状态（可查RSSI强度再打开接收）
*参数：无
*返回值：无
*-------------------------------------------------------------------------*/
void BK4815RxAudio(void);
/*-------------------------------------------------------------------------
*函数：BK4815Sleep  4815睡眠模式
*参数：无
*返回值：无
*-------------------------------------------------------------------------*/
void BK4815Sleep(void);
/*-------------------------------------------------------------------------
*函数：BK4815RssiAndSnr  4815的RSSI和SNR信号强度
*参数：无
*返回值：13：8 SNR  6：0 RSSI   
*-------------------------------------------------------------------------*/
u16 BK4815RssiAndSnr(void);
/*-------------------------------------------------------------------------
*函数：StartBK4815TX  发射
*参数：无
*返回值：无
*-------------------------------------------------------------------------*/
void StartBK4815TX(void);
/*-------------------------------------------------------------------------
*函数：EnterBK4815RX  接收
*参数：无
*返回值：无
*-------------------------------------------------------------------------*/
void EnterBK4815RX(void);
/*-------------------------------------------------------------------------
*函数：SetBK4815Pragram  BK4815初使化参数
*参数：无  
*返回值：无
*-------------------------------------------------------------------------*/
void SetBK4815Pragram();
void BK_DTMF_RECIVE();
//void BK_DTMF_SET_CODE(u8 dat);
/*-------------------------------------------------------------------------
*函数：BK_DTMF_RX_Read  读DTMF编码
*参数：无
*返回值：DTMF编码
*-------------------------------------------------------------------------*/
u8 BK_DTMF_RX_Read();
void BK_DTMF_INTERUPT_CLEAR();
void BK_TX2RX();
#endif