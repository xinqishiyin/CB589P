C51 COMPILER V9.52.0.0   MODE_WIRELESS                                                     06/01/2018 15:43:51 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MODE_WIRELESS
OBJECT MODULE PLACED IN mode_wireless.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE mode_wireless.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJE
                    -CTEXTEND TABS(2)

line level    source

   1          #include "system.h"
   2          #include "mode_wireless.h"
   3          #include "KB4815.h"
   4          #include "vco.h"
   5          #include "event.h"
   6          
   7          #define SNR_RSSI_CHECK_TIME 5
   8          
   9          extern xdata uint cSqSum;
  10          
  11          extern code uint asq_open_table[];
  12          extern code uint asq_close_table[];
  13          extern code uint sq_open_table[];
  14          extern code uint sq_close_table[];
  15          
  16          /*-------------------------------------------------------------------------
  17          *函数：initSysModeWireless  无线模式
  18          *参数：无  
  19          *返回值：无
  20          *-------------------------------------------------------------------------*/
  21          void initSysModeWireless(void)
  22          {
  23   1        initBK4815();
  24   1        mFlag.SpkOpen4815 = 0;
  25   1        mFlag.SqOpen = 0;
  26   1        mSq.open = DB118;
  27   1        mSq.close = DB120;
  28   1      }
  29          u16 Get4815Rssi()
  30          {
  31   1        u8 i;
  32   1        u16 snr,rssi;
  33   1        u16 snr_rssi;
  34   1      
  35   1        snr = 0;
  36   1        rssi = 0;
  37   1        
  38   1        for(i=0; i<SNR_RSSI_CHECK_TIME; i++)
  39   1        {
  40   2          snr_rssi = BK4815RssiAndSnr();
  41   2          snr += (snr_rssi >> 8); 
  42   2          rssi += snr_rssi & 0x00ff;                                                                                                                                      
  43   2          delayus(10);
  44   2        }
  45   1        snr /= SNR_RSSI_CHECK_TIME;
  46   1           //读5次  取平均值
  47   1        rssi /= SNR_RSSI_CHECK_TIME;     
  48   1        return rssi;
  49   1      }
  50          /*-------------------------------------------------------------------------
  51          *函数：wirelessCheckRec  接收
  52          *参数：freq    频率  
  53          *返回值：无
  54          *-------------------------------------------------------------------------*/
C51 COMPILER V9.52.0.0   MODE_WIRELESS                                                     06/01/2018 15:43:51 PAGE 2   

  55          void wirelessCheckRec(void)
  56          {
  57   1        u16 rssi;
  58   1        if(mFlag.SpkOpen4815 == 0)
  59   1        {   
  60   2          if(mDtmfRecive.DtmfSussece==1)
  61   2          {
  62   3            
  63   3              mFlag.SpkOpen4815 = 1;
  64   3              BK4815RxAudio();
  65   3              setEmission(1);
  66   3              delayms(70);      
  67   3          }
  68   2          else
  69   2          {
  70   3            
  71   3            mDtmfRecive.DtmfSussece=0;
  72   3          }
  73   2        }
  74   1        else 
  75   1        {
  76   2          rssi=Get4815Rssi();
  77   2          if(rssi <= mSq.close)
  78   2          {
  79   3            delayms(30);
  80   3            rssi=Get4815Rssi();
  81   3            if(rssi <= mSq.close)
  82   3            {
  83   4        //      OUT_EN_SPKER = CLOSE;
  84   4        //      OUT_LED_RX = LIGHT_OFF;
  85   4              //clearRxFlag();
  86   4              mFlag.SpkOpen4815 = 0;
  87   4              mDtmfRecive.DtmfSussece=0;
  88   4              setEmission(0);
  89   4            }       
  90   3          }
  91   2        }
  92   1      }
  93          
  94          void checkCBRadioRec(void)
  95          {
  96   1          uchar sq_db_count;
  97   1        char val_db;
  98   1        uint temp_asq,temp_rssi,temp_agca;
  99   1        u16 asq_close_db;
 100   1        temp_asq = 0;
 101   1        temp_rssi = 0;
 102   1        temp_agca = 0;
 103   1      
 104   1        temp_asq += readVoltage(ADC_ASQ);
 105   1        temp_rssi += readVoltage(ADC_RSSI);
 106   1        temp_agca += readVoltage(ADC_AGCA);
 107   1        
 108   1        
 109   1      
 110   1        mAsqVoltage = temp_asq;
 111   1        mRssiVoltage = temp_rssi;
 112   1        mAgcaVoltage = temp_agca; 
 113   1        if(mAgcaVoltage<0x0190)
 114   1          {
 115   2          cSqSum= mRssiVoltage + (0x0200 - mAgcaVoltage);
 116   2        }
C51 COMPILER V9.52.0.0   MODE_WIRELESS                                                     06/01/2018 15:43:51 PAGE 3   

 117   1        else
 118   1        {
 119   2          cSqSum= mRssiVoltage ;
 120   2        }
 121   1          
 122   1        if((mCbParam.Sq&0x1f) == 0)
 123   1        {
 124   2          if(mFlag.Mute == 0) Cls_Mute();
 125   2          if(mFlag.SqOpen == 0)
 126   2          {   
 127   3            StartBK4815TX();
 128   3            delayms(50);
 129   3          }
 130   2      
 131   2          return;
 132   2        }
 133   1        
 134   1          if(mSqParam.IsAsq)  //判ASQ
 135   1        {
 136   2          if(mFlag.SqOpen == 0)
 137   2          {
 138   3            switch(mOpenSqDbLevel)
 139   3           {
 140   4             case 1:sq_db_count=6;         break;
 141   4             case 2:sq_db_count=8;         break;
 142   4             case 3:sq_db_count=10;        break;
 143   4             case 4:sq_db_count=12;        break;
 144   4             case 5:sq_db_count=14;        break;     
 145   4             default:
 146   4               break;
 147   4           }
 148   3           val_db=sq_db_count+mSqParam.AsqOpenSet[mOpenSqDbLevel-1];
 149   3          if(val_db<0)val_db=0;
 150   3          else if(val_db>17) val_db=17;   
 151   3            //SET_SPK_MUTE; //关闭喇叭
 152   3            if(mAsqVoltage <= asq_open_table[val_db]) //因为db是负值，所以相反
 153   3            {       
 154   4              if((mFlag.Mute == 0)&&(mCbParam.VolLevel != 0)) Cls_Mute(); //打开喇叭
 155   4              else mFlag.SqOpenButMute = 1;
 156   4              
 157   4              StartBK4815TX();
 158   4              mLastOpenSqDbLevel = mOpenSqDbLevel;
 159   4            }
 160   3          }
 161   2          else 
 162   2          {
 163   3              switch(mOpenSqDbLevel)
 164   3             {
 165   4               case 1:sq_db_count=3;         break;
 166   4               case 2:sq_db_count=5;         break;
 167   4               case 3:sq_db_count=7;         break;
 168   4               case 4:sq_db_count=9;         break;
 169   4               case 5:sq_db_count=11;        break;       
 170   4               default:
 171   4                 break;
 172   4             }
 173   3             val_db=sq_db_count+mSqParam.AsqCloseSet[mOpenSqDbLevel-1];
 174   3            if(val_db<0)val_db=0;
 175   3            
 176   3              if(mAsqVoltage >= asq_close_table[val_db])
 177   3              {
 178   4                closeSq();
C51 COMPILER V9.52.0.0   MODE_WIRELESS                                                     06/01/2018 15:43:51 PAGE 4   

 179   4                EnterBK4815RX();
 180   4              }
 181   3              else if(mFlag.Mute||(mCbParam.VolLevel == 0))mFlag.SqOpenButMute = 1;
 182   3              else
 183   3              {       
 184   4                if((mFlag.Mute == 0)&&(mCbParam.VolLevel != 0)) Cls_Mute(); //打开喇叭        
 185   4              }
 186   3          }
 187   2        }
 188   1        else
 189   1        {
 190   2          switch(mOpenSqDbLevel)
 191   2          {
 192   3            case 1:sq_db_count=3;  break;
 193   3            case 2:sq_db_count=5;  break;
 194   3            case 3:sq_db_count=7;  break; 
 195   3            case 4:sq_db_count=9;  break;   
 196   3            case 5:sq_db_count=11;  break;        
 197   3            case 6:sq_db_count=13;  break;        
 198   3            case 7:sq_db_count=15;  break;        
 199   3            case 8:sq_db_count=17;  break;      
 200   3            case 9:sq_db_count=19;  break;        
 201   3            case 10:sq_db_count=21;  break;     
 202   3            case 11:sq_db_count=23;  break;       
 203   3            case 12:sq_db_count=25;  break;     
 204   3            case 13:sq_db_count=27;  break;     
 205   3            case 14:sq_db_count=29;  break;   
 206   3            case 15:sq_db_count=31;  break;   
 207   3            case 16:sq_db_count=33;  break;     
 208   3            case 17:sq_db_count=35;  break;     
 209   3            case 18:sq_db_count=37;  break;     
 210   3            case 19:sq_db_count=39;  break;     
 211   3            case 20:sq_db_count=41;  break;     
 212   3            case 21:sq_db_count=43;  break;     
 213   3            case 22:sq_db_count=45;  break;     
 214   3            case 23:sq_db_count=47;  break;       
 215   3            case 24:sq_db_count=51;  break;     
 216   3            case 25:sq_db_count=61;  break;     
 217   3            case 26:sq_db_count=71;  break;   
 218   3            case 27:sq_db_count=77;  break;     
 219   3            case 28:sq_db_count=82;  break;       
 220   3            default:
 221   3              break;
 222   3          }
 223   2          val_db=sq_db_count+mSqParam.SqOpenSet[mOpenSqDbLevel-1];
 224   2          if(val_db<0)val_db=0;
 225   2          else if(val_db>84) val_db=84;   
 226   2          
 227   2          if(mFlag.SqOpen == 0)
 228   2          {
 229   3            //SET_SPK_MUTE; //关闭喇叭
 230   3            if(cSqSum >= sq_open_table[val_db]) //因为db是负值，所以相反
 231   3            {     
 232   4              
 233   4              
 234   4              StartBK4815TX();
 235   4              mLastOpenSqDbLevel = mOpenSqDbLevel;
 236   4              if(mFlag.SqOpen == 0)
 237   4              {
 238   5                if((mFlag.Mute == 0)&&(mCbParam.VolLevel != 0)) Cls_Mute(); //打开喇叭
 239   5              else mFlag.SqOpenButMute = 1;
 240   5              }
C51 COMPILER V9.52.0.0   MODE_WIRELESS                                                     06/01/2018 15:43:51 PAGE 5   

 241   4            }         
 242   3          }
 243   2          else
 244   2          {
 245   3            switch(mOpenSqDbLevel)
 246   3          {
 247   4            case 1:sq_db_count=3;  break;
 248   4            case 2:sq_db_count=5;  break;
 249   4            case 3:sq_db_count=7;  break; 
 250   4            case 4:sq_db_count=8;  break;   
 251   4            case 5:sq_db_count=11;  break;        
 252   4            case 6:sq_db_count=13;  break;        
 253   4            case 7:sq_db_count=15;  break;        
 254   4            case 8:sq_db_count=17;  break;      
 255   4            case 9:sq_db_count=19;  break;        
 256   4            case 10:sq_db_count=21;  break;     
 257   4            case 11:sq_db_count=23;  break;       
 258   4            case 12:sq_db_count=24;  break;     
 259   4            case 13:sq_db_count=27;  break;     
 260   4            case 14:sq_db_count=28;  break;   
 261   4            case 15:sq_db_count=31;  break;   
 262   4            case 16:sq_db_count=33;  break;     
 263   4            case 17:sq_db_count=35;  break;     
 264   4            case 18:sq_db_count=36;  break;     
 265   4            case 19:sq_db_count=39;  break;     
 266   4            case 20:sq_db_count=41;  break;     
 267   4            case 21:sq_db_count=44;  break;     
 268   4            case 22:sq_db_count=45;  break;     
 269   4            case 23:sq_db_count=47;  break;       
 270   4            case 24:sq_db_count=51;  break;     
 271   4            case 25:sq_db_count=61;  break;     
 272   4            case 26:sq_db_count=71;  break;   
 273   4            case 27:sq_db_count=77;  break;     
 274   4            case 28:sq_db_count=82;  break;       
 275   4            default:
 276   4              break;
 277   4          }
 278   3          val_db=sq_db_count+mSqParam.SqCloseSet[mOpenSqDbLevel-1];
 279   3          if(val_db<0)val_db=0;
 280   3          else if(val_db>87) val_db=87;  
 281   3      
 282   3              asq_close_db=sq_close_table[val_db];        
 283   3              if(cSqSum <= asq_close_db)
 284   3              {
 285   4                
 286   4                if(cSqSum <= asq_close_db)
 287   4                {
 288   5                  closeSq();
 289   5                  EnterBK4815RX();
 290   5                }         
 291   4              }
 292   3              else if(mFlag.Mute||(mCbParam.VolLevel == 0))mFlag.SqOpenButMute = 1;   
 293   3              else
 294   3              {       
 295   4                if((mFlag.Mute == 0)&&(mCbParam.VolLevel != 0)) Cls_Mute(); //打开喇叭        
 296   4              }
 297   3          }   
 298   2        }
 299   1        
 300   1      //  wirelessEventPTT();
 301   1      }
 302          /*-------------------------------------------------------------------------
C51 COMPILER V9.52.0.0   MODE_WIRELESS                                                     06/01/2018 15:43:51 PAGE 6   

 303          *函数：sysModeWireless  无线模式
 304          *参数：无  
 305          *返回值：无
 306          *-------------------------------------------------------------------------*/
 307          void sysModeWireless(void)
 308          {
 309   1          
 310   1        while((HM_DET==1)&&(POWER_ON==0))
 311   1        { 
 312   2          
 313   2          if(mDtmfRecive.DtmfSussece==1)
 314   2          {
 315   3            wirelessCheckRec(); 
 316   3          }
 317   2          
 318   2          if(mFlag.SpkOpen4815 == 0)
 319   2          {
 320   3            checkCBRadioRec();
 321   3          }   
 322   2          if(mRecive==MRECIVE_BK4815_INTERUPT)
 323   2          {
 324   3            BK_DTMF_RECIVE();
 325   3            mRecive=MRECIVE_NONE;
 326   3          }
 327   2        }
 328   1        delayms(150);
 329   1        BK4815Sleep();
 330   1      }
 331          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1894    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
