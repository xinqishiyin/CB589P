C51 COMPILER V9.52.0.0   UART                                                              06/01/2018 15:43:47 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE uart.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTEND 
                    -TABS(2)

line level    source

   1          #include "system.h"
   2          #include "uart.h"
   3          #include "vco.h"
   4          
   5          uchar cTxLength = 0;
   6          
   7          void delayuus(u8 i)
   8          {
   9   1          while(--i);
  10   1      }
  11          void uart0SendByte(unsigned char dat)
  12          {
  13   1        SBUF0 = dat;  
  14   1        while(TI == 0);
  15   1        TI = 0;
  16   1      }
  17          /*-------------------------------------------------------------------------
  18          *函数：uart0SendString  发送数组
  19          *参数：dat    
  20          *返回值：无
  21          *-------------------------------------------------------------------------*/
  22          void uart0SendString(u8 *p)
  23          {
  24   1        ES=0;
  25   1        while(*p!='\0')
  26   1        {
  27   2          uart0SendByte(*p);
  28   2          p++;
  29   2        }
  30   1        ES=1;
  31   1      }
  32          /*-------------------------------------------------------------------------
  33          *函数：uart0SendData  发送对应长度数组
  34          *参数：cTxLength 长度    
  35          *返回值：无
  36          *-------------------------------------------------------------------------*/
  37          void uart0SendData(unsigned char *p)
  38          {
  39   1        ES = 0;
  40   1        while(cTxLength--)
  41   1        {
  42   2          uart0SendByte(*p);
  43   2          p++;
  44   2        }
  45   1        ES = 1;
  46   1      }
  47          /*-------------------------------------------------------------------------
  48          *函数：response  发送参数
  49          *参数：无    
  50          *返回值：无
  51          *-------------------------------------------------------------------------*/
  52          void response(uchar ack)
  53          {
  54   1        mCbParam.UartTxBuf[1]=ack;
C51 COMPILER V9.52.0.0   UART                                                              06/01/2018 15:43:47 PAGE 2   

  55   1        mCbParam.UartTxBuf[2]=0;
  56   1        cTxLength=3;
  57   1        uart0SendData(mCbParam.UartTxBuf);
  58   1      }
  59          
  60          /*-------------------------------------------------------------------------
  61          *函数：response  发送信号强度
  62          *参数：要发送的参数    
  63          *返回值：无
  64          *-------------------------------------------------------------------------*/
  65          void sendCommand(uchar cmd)
  66          {
  67   1        u8 rssi;
  68   1        u8 i;
  69   1        mCbParam.UartTxBuf[1]=cmd;
  70   1        if(POWER_ON == 0) return;
  71   1        switch(cmd)
  72   1        {
  73   2          
  74   2          case CMD_GET_RSSI:
  75   2            if(mFlag.SqOpen)rssi=mRssi| 0x40;
  76   2            else rssi = mRssi;
  77   2            mCbParam.UartTxBuf[2]=2;
  78   2            mCbParam.UartTxBuf[3]=rssi;
  79   2            mCbParam.UartTxBuf[4]=rssi;
  80   2          
  81   2            cTxLength=5;
  82   2            break;
  83   2          
  84   2          case CMD_REQUEST_SQ_SET:
  85   2            if(mSqParam.IsAsq==0)
  86   2            {
  87   3              mCbParam.UartTxBuf[2]=3;
  88   3              if(mSqParam.SqOpenSet[mOpenSqDbLevel-1]>=0)
  89   3              {
  90   4                mCbParam.UartTxBuf[3]=mSqParam.SqOpenSet[mOpenSqDbLevel-1];     
  91   4              }
  92   3              else 
  93   3              {
  94   4                mCbParam.UartTxBuf[3]=(-mSqParam.SqOpenSet[mOpenSqDbLevel-1])|0x20;
  95   4              
  96   4              }
  97   3              if(mSqParam.SqCloseSet[mOpenSqDbLevel-1]>=0)
  98   3              {
  99   4                
 100   4                mCbParam.UartTxBuf[4]=mSqParam.SqCloseSet[mOpenSqDbLevel-1];
 101   4              }
 102   3              else 
 103   3              {         
 104   4                mCbParam.UartTxBuf[4]=(-mSqParam.SqCloseSet[mOpenSqDbLevel-1])|0x20;
 105   4              }
 106   3              
 107   3              mCbParam.UartTxBuf[5]=0;
 108   3              for(i=3;i<5;i++)
 109   3              {
 110   4                mCbParam.UartTxBuf[5] ^=  mCbParam.UartTxBuf[i];
 111   4              }
 112   3              mCbParam.UartTxBuf[5]&=0x7f;
 113   3              cTxLength=6;
 114   3            }
 115   2            else
 116   2            {
C51 COMPILER V9.52.0.0   UART                                                              06/01/2018 15:43:47 PAGE 3   

 117   3              mCbParam.UartTxBuf[2]=3;
 118   3              if(mSqParam.AsqOpenSet[mOpenSqDbLevel-1]>=0)
 119   3              {
 120   4                mCbParam.UartTxBuf[3]=mSqParam.AsqOpenSet[mOpenSqDbLevel-1];      
 121   4              }
 122   3              else 
 123   3              {
 124   4                mCbParam.UartTxBuf[3]=(-mSqParam.AsqOpenSet[mOpenSqDbLevel-1])|0x20;
 125   4              
 126   4              }
 127   3              if(mSqParam.AsqCloseSet[mOpenSqDbLevel-1]>=0)
 128   3              {
 129   4                
 130   4                mCbParam.UartTxBuf[4]=mSqParam.AsqCloseSet[mOpenSqDbLevel-1];
 131   4              }
 132   3              else 
 133   3              {         
 134   4                mCbParam.UartTxBuf[4]=(-mSqParam.AsqCloseSet[mOpenSqDbLevel-1])|0x20;
 135   4              }
 136   3              
 137   3              mCbParam.UartTxBuf[5]=0;
 138   3              for(i=3;i<5;i++)
 139   3              {
 140   4                mCbParam.UartTxBuf[5] ^=  mCbParam.UartTxBuf[i];
 141   4              }
 142   3              mCbParam.UartTxBuf[5]&=0x7f;
 143   3              cTxLength=6;
 144   3            }
 145   2            break;
 146   2          default:
 147   2            cTxLength=0;
 148   2            break;
 149   2        }
 150   1        uart0SendData(mCbParam.UartTxBuf);
 151   1      }
 152          /*-------------------------------------------------------------------------
 153          *函数：analyseCMD  发送参数
 154          *参数：要发送的参数    
 155          *返回值：无
 156          *-------------------------------------------------------------------------*/
 157          void analyseCMD(void)
 158          {
 159   1        
 160   1        mUartCmd = mReceivePackage.RecvBuf[1];          //1为参数名 
 161   1          
 162   1        response(CMD_ACK);
 163   1      }
 164          
 165          
 166          
 167          void  Uart0(void) interrupt 4
 168          {
 169   1        uchar dat=0;
 170   1        uchar i=0;
 171   1        if(POWER_ON == 0) return;
 172   1        if(TI) return;    //数据发送完毕
 173   1        RI=0;
 174   1        
 175   1      
 176   1        
 177   1        dat=SBUF0;
 178   1        
C51 COMPILER V9.52.0.0   UART                                                              06/01/2018 15:43:47 PAGE 4   

 179   1        if(dat == MAGIC)
 180   1        {
 181   2          mReceivePackage.RecvStatus = MSG_HEADER;
 182   2          mReceivePackage.RecvCount = 0;
 183   2        }
 184   1        
 185   1        switch(mReceivePackage.RecvStatus)
 186   1        {
 187   2          case MSG_HEADER:                                         // 0 位为数据头
 188   2            mReceivePackage.RecvBuf[mReceivePackage.RecvCount]=dat;     
 189   2            if(mReceivePackage.RecvCount == 2)
 190   2            {
 191   3              if(mReceivePackage.RecvBuf[2] == 0) //数据长度
 192   3              {
 193   4                analyseCMD();
 194   4                mReceivePackage.RecvCount = 0;
 195   4              }
 196   3              else 
 197   3              {
 198   4                mReceivePackage.RecvStatus = MSG_DATA;
 199   4              }
 200   3            }
 201   2            mReceivePackage.RecvCount++;
 202   2            break;
 203   2          case MSG_DATA:
 204   2            mReceivePackage.RecvBuf[mReceivePackage.RecvCount]=dat;
 205   2            if(mReceivePackage.RecvCount==4)
 206   2            {
 207   3              mReceivePackage.RecvBuf[mReceivePackage.RecvCount]=dat;
 208   3            }
 209   2            if((mReceivePackage.RecvCount -2)>=mReceivePackage.RecvBuf[2]) //2为数据长度
 210   2            {
 211   3              dat=0;
 212   3              for(i=3;i<2+(mReceivePackage.RecvBuf[2]); i++)
 213   3              {
 214   4                dat^=mReceivePackage.RecvBuf[i];
 215   4              }
 216   3              dat &=0x7f;
 217   3              if(mReceivePackage.RecvBuf[i]==dat)
 218   3              {
 219   4                analyseCMD();
 220   4                mReceivePackage.RecvCount=0;
 221   4              }
 222   3            }
 223   2          
 224   2            mReceivePackage.RecvCount++;
 225   2            break;    
 226   2        }
 227   1        
 228   1      }
 229          
 230          
 231          
 232          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    806    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.52.0.0   UART                                                              06/01/2018 15:43:47 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
