C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TM1722
OBJECT MODULE PLACED IN TM1722.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TM1722.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(G:\CB589P) DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          #include "system.h"
   2          #include "TM1722.h"
   3          
   4          
   5          u8 SEGDATA[]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
   6          
   7          
   8          //国家LCD 编码
   9          uchar xdata country_ecode[14][4] =  
  10          {
  11            {0x87,0x01,0x05,0x70},//EU
  12            {0x85,0x01,0x47,0x12},//CE
  13            {0x05,0x07,0x07,0x05},//UK
  14            {0x87,0x04,0x05,0x10},//PL
  15            {0xD0,0x01,0x45,0x70},//I0
  16            {0xD0,0x01,0x43,0x52},//I2
  17            {0x03,0x07,0x47,0x12},//DE
  18            {0xD0,0x01,0x25,0x61},//IN
  19            {0xA7,0x04,0x05,0x70},//RU
  20            {0x87,0x04,0x45,0x10},//PC
  21            {0x87,0x04,0x30,0x05},//PX
  22            {0x87,0x06,0x05,0x70},//AU
  23            {0x03,0x02,0x05,0x10},//NL
  24            {0xD5,0x06,0x00,0x00},//AM  错位显示
  25          };
  26          //数字1字符
  27          code const u8 NUM1_ADD1[]={0x5f,0x50,0x6b,0x79,0x74,0x3d,0x3f,0x58,0x7f,0x7d,0x07,0x22,0x6e,0x0f,0x37,0x73
             -,0x3d,0x2e,0x2f,0x00};
  28          
  29          //数字2字符
  30          code const u8 NUM2_ADD2[]={0x5f,0x50,0x6b,0x79,0x74,0x3d,0x3f,0x58,0x7f,0x7d,0x22,0x6e,0x0f,0x37,0x7c,0x27
             -,0x7e,0x73,0x07,0x00};
  31          
  32          
  33          //数字3字符
  34          code const u8 NUM3_ADD3[]={0x5f,0x50,0x6b,0x79,0x74,0x3d,0x3f,0x58,0x7f,0x7d,0x7e,0x76,0x07,0x5f,0x00};
  35          
  36          
  37          //数字4字符
  38          code const u8 NUM4_ADD4[]={0x85,0x00,0x83,0x82,0x06,0x86,0x87,0x80,0x87,0x86,0x86,0x87,0X87,0x85,0x87,0x85
             -,0x87,0x0d,0x30,0x76,0xd5,0x00};
  39          
  40          code const u8 NUM4_ADD5[]={0x07,0x06,0x05,0x07,0x06,0x03,0x03,0x06,0x07,0x07,0x03,0x06,0x00,0x07,0x01,0x01
             -,0x04,0x01,0x07,0x04,0x06,0x00};
  41          
  42          
  43          
  44          
  45          //数字5字符
  46          code const u8 NUM5_ADD6[]={0x45,0x00,0x43,0x42,0x06,0x46,0x47,0x40,0x47,0x46,0x46,0x25,0x50,0x74,0x50,0x45
             -,0x03,0x54,0x47,0x00};
  47          
  48          code const u8 NUM5_ADD7[]={0x70,0x60,0x52,0x72,0x62,0x32,0x32,0x60,0x72,0x72,0x62,0x61,0x70,0x10,0x10,0x70
             -,0x50,0x10,0x02,0x00};
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 2   

  49          
  50          
  51          
  52          //接收指示
  53          const u8 RX_ADD2=0x80;
  54          
  55          //发射指示
  56          const u8 TX_ADD5=0x08;
  57          
  58          //EMG指示
  59          const u8 EMG_ADD6=0x80;
  60          
  61          //SC指示
  62          const u8 SC_ADD7=0x80;
  63          
  64          //LOW指示
  65          const u8 LOW_ADD8=0x08;
  66          
  67          //DW
  68          const u8 DW_ADD8=0x04;
  69          
  70          //FM
  71          const u8 FM_ADD3=0x80;
  72          
  73          //AM
  74          const u8 AM_ADD4=0x08;
  75          
  76          //PS
  77          const u8 PS_ADD6=0x08;
  78          
  79          //LOCK
  80          const u8 LOCK_ADD7=0x08;
  81          
  82          //BATT
  83          const u8 BATT_ADD8=0x02;
  84          
  85          //ASQ
  86          const u8 ASQ_ADD8=0x01;
  87          
  88          //场强指示
  89          const u8 STRENGTH_LEVEL1_ADD1=0x80;
  90          const u8 STRENGTH_LEVEL2_ADD8=0x80;
  91          const u8 STRENGTH_LEVEL3_ADD8=0x10;
  92          const u8 STRENGTH_LEVEL4_ADD8=0x20;
  93          const u8 STRENGTH_LEVEL5_ADD8=0x40;
  94          
  95          
  96          //写入字
  97          void TM1722_Write_Byte(u8 dat)
  98          {
  99   1          u8 i;
 100   1          delayms(2);
 101   1          LCD_EN=0;
 102   1          for(i=0;i<8;i++)
 103   1          {
 104   2              LCD_CLK=0;
 105   2              LCD_DAT=dat&0X01;
 106   2              LCD_CLK=1;
 107   2              dat>>=1;
 108   2          }
 109   1          delayms(2);
 110   1      }
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 3   

 111          //写入数据
 112          void TM1722_Write_Word(u8 adress,u8 dat)
 113          {
 114   1         
 115   1         LCD_EN=1;
 116   1         TM1722_Write_Byte(0x40);
 117   1         LCD_EN=1;
 118   1         TM1722_Write_Byte(0xc0+adress); //写入地址
 119   1         delayms(2);
 120   1         TM1722_Write_Byte(dat);   //写入数据
 121   1         delayms(2);
 122   1         LCD_EN=1;
 123   1      }
 124          void TM1722_Write_String(u8 addr,u8 count)
 125          {
 126   1        u8 i;
 127   1        LCD_EN=1;
 128   1        TM1722_Write_Byte(0x40);
 129   1        LCD_EN=1;
 130   1        TM1722_Write_Byte(0xc0+addr);
 131   1        for(i=0;i<count;i++)
 132   1        {    
 133   2           TM1722_Write_Byte(0xff);
 134   2           
 135   2        }
 136   1        LCD_EN=1;
 137   1      }
 138          
 139          /*****************************************
 140          函数：TM1722_Init() LCD初使化
 141          参数：无
 142          返回值：无
 143          *****************************************/
 144          void TM1722_Init()
 145          {  
 146   1        delayms(2);
 147   1        LCD_EN=1;
 148   1        LCD_CLK=1;
 149   1        LCD_DAT=1;
 150   1        
 151   1         TM1722_Write_Byte(0x00); //设置工作模式
 152   1         LCD_EN=1; 
 153   1         TM1722_Write_Byte(0x97);//显示开
 154   1         LCD_EN=1;
 155   1         TM1722_Write_String(0,16);
 156   1      }
 157          
 158          
 159          /*****************************************
 160          函数：LCD_NUM1(uchar i) 设置第一个数字显示
 161          参数：i  0-9：0-9 
 162          返回值：无
 163          *****************************************/
 164          void LCD_NUM1(u8 i)
 165          {
 166   1        SEGDATA[0]=SEGDATA[0]&0x80; 
 167   1        SEGDATA[0]=SEGDATA[0]|NUM1_ADD1[i];
 168   1        
 169   1        
 170   1      }
 171          
 172          /*****************************************
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 4   

 173          函数：LCD_NUM2(uchar i) 设置第二个数字显示
 174          参数：i  0-9：0-9 
 175          返回值：无
 176          *****************************************/
 177          void LCD_NUM2(u8 i)
 178          {
 179   1        SEGDATA[1]=SEGDATA[1]&0x80;
 180   1        SEGDATA[1]=SEGDATA[1]|NUM2_ADD2[i]; 
 181   1      
 182   1      }
 183          
 184          /*****************************************
 185          函数：LCD_NUM3(uchar i) 设置第三个数字显示
 186          参数：i  0-9：0-9 
 187          返回值：无
 188          *****************************************/
 189          void LCD_NUM3(u8 i)
 190          {
 191   1        SEGDATA[2]=SEGDATA[2]&0x80;
 192   1        SEGDATA[2]=SEGDATA[2]|NUM3_ADD3[i]; 
 193   1      
 194   1      }
 195          
 196          /*****************************************
 197          函数：LCD_NUM4(uchar i) 设置第四个数字显示
 198          参数：i  0-9：0-9 
 199          返回值：无
 200          *****************************************/
 201          void LCD_NUM4(u8 i)
 202          {
 203   1        SEGDATA[3]=SEGDATA[3]&0x08;
 204   1        SEGDATA[3]=SEGDATA[3]|NUM4_ADD4[i]; 
 205   1        
 206   1        SEGDATA[4]=SEGDATA[4]&0x08;
 207   1        SEGDATA[4]=SEGDATA[4]|NUM4_ADD5[i]; 
 208   1        
 209   1      }
 210          
 211          
 212          /*****************************************
 213          函数：LCD_NUM5(uchar i) 设置第五个数字显示
 214          参数：i  0-9：0-9 
 215          返回值：无
 216          *****************************************/
 217          void LCD_NUM5(u8 i)
 218          {
 219   1        SEGDATA[5]=SEGDATA[5]&0x88;
 220   1        SEGDATA[5]=SEGDATA[5]|NUM5_ADD6[i];
 221   1        
 222   1        SEGDATA[6]=SEGDATA[6]&0x88;
 223   1        SEGDATA[6]=SEGDATA[6]|NUM5_ADD7[i];
 224   1      
 225   1      }
 226          
 227          /*****************************************
 228          函数：LCD_RX(uchar i) 设置接收指示
 229          参数：i  0：不显示 1：显示
 230          返回值：无
 231          *****************************************/
 232          void LCD_RX(u8 i)
 233          {
 234   1        SEGDATA[1]=i==1? (SEGDATA[1]|RX_ADD2):(SEGDATA[1]&~RX_ADD2);
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 5   

 235   1        
 236   1      }
 237          
 238          /*****************************************
 239          函数：LCD_TX(uchar i) 设置发射指示
 240          参数：i  0：不显示 1：显示
 241          返回值：无
 242          *****************************************/
 243          void LCD_TX(u8 i)
 244          {
 245   1        SEGDATA[4]=i==1? (SEGDATA[4]|TX_ADD5):(SEGDATA[4]&~TX_ADD5);
 246   1      
 247   1      }
 248          
 249          
 250          /*****************************************
 251          函数：LCD_EMG(u8 i) 设置功率指示
 252          参数：i  0： 1：显示
 253          返回值：无
 254          *****************************************/
 255          void LCD_EMG(u8 i)
 256          {
 257   1        SEGDATA[5]=i==1?(SEGDATA[5]|EMG_ADD6):(SEGDATA[5]&~EMG_ADD6);
 258   1      
 259   1      }
 260          /*****************************************
 261          函数：LCD_SCAND(uchar i) 设置扫描指示
 262          参数：i  0： 1：
 263          返回值：无
 264          *****************************************/
 265          void LCD_SCAN(u8 i)
 266          {
 267   1        SEGDATA[6]=i==1?(SEGDATA[6]|SC_ADD7):(SEGDATA[6]&~SC_ADD7);
 268   1      
 269   1      }
 270          
 271          /*****************************************
 272          函数：LCD_LOW(uchar i) 设置扫描指示
 273          参数：i  0：不显示 1：显示
 274          返回值：无
 275          *****************************************/
 276          void LCD_LOW(u8 i)
 277          {
 278   1        SEGDATA[7]=i==1? (SEGDATA[7]|LOW_ADD8):(SEGDATA[7]&~LOW_ADD8);
 279   1      
 280   1      }
 281          
 282          /*****************************************
 283          函数：LCD_DW(uchar i) 
 284          参数：i  0： 1：
 285          返回值：无
 286          *****************************************/
 287          void LCD_DW(u8 i)
 288          {
 289   1        SEGDATA[7]=i==1? (SEGDATA[7]|DW_ADD8):(SEGDATA[7]&~DW_ADD8);
 290   1        
 291   1      }
 292          
 293          /*****************************************
 294          函数：LCD_FM(uchar i) 设置中继功能指示
 295          参数：i  0：不显示 1：显示
 296          返回值：无
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 6   

 297          *****************************************/
 298          void LCD_FM(u8 i)
 299          {
 300   1        SEGDATA[2]=i==1?(SEGDATA[2]|FM_ADD3):(SEGDATA[2]&~FM_ADD3);
 301   1        
 302   1      }
 303          
 304          /*****************************************
 305          函数：LCD_AM(uchar i) 
 306          参数：i  0：不显示 1：显示
 307          返回值：无
 308          *****************************************/
 309          void LCD_AM(u8 i)
 310          {
 311   1        SEGDATA[3]=i==1?(SEGDATA[3]|AM_ADD4):(SEGDATA[3]&~AM_ADD4);
 312   1        
 313   1      }
 314          
 315          /*****************************************
 316          函数：LCD_PS(uchar i) 
 317          参数：i  0：不显示 1：显示
 318          返回值：无
 319          *****************************************/
 320          void LCD_PS(u8 i)
 321          {
 322   1        SEGDATA[5]=i==1?(SEGDATA[5]|PS_ADD6):(SEGDATA[5]&~PS_ADD6);
 323   1        
 324   1      }
 325          
 326          
 327          void LCD_LOCK(u8 i)
 328          {
 329   1        SEGDATA[6]=i==1?(SEGDATA[6]|LOCK_ADD7):(SEGDATA[6]&~LOCK_ADD7);
 330   1        
 331   1      }
 332          
 333          
 334          void LCD_BATT(u8 i)
 335          {
 336   1        SEGDATA[7]=i==1?(SEGDATA[7]|BATT_ADD8):(SEGDATA[7]&~BATT_ADD8);
 337   1        
 338   1      }
 339          
 340          
 341          void LCD_ASQ(u8 i)
 342          {
 343   1        SEGDATA[7]=i==1?(SEGDATA[7]|ASQ_ADD8):(SEGDATA[7]&~ASQ_ADD8);
 344   1        
 345   1      }
 346          
 347          /*****************************************
 348          函数：LCD_STRENGTH(uchar i) 设置场强指示
 349          参数：i  0：不显示 1：一级 2：二级 3：三级 4：四级 5：五级
 350          返回值：无
 351          *****************************************/
 352          void LCD_STRENGTH(u8 i)
 353          {
 354   1        switch(i)
 355   1        {
 356   2          case 0:
 357   2            SEGDATA[0]= SEGDATA[0]&~STRENGTH_LEVEL1_ADD1;
 358   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL2_ADD8;
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 7   

 359   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL3_ADD8;
 360   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 361   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 362   2            break;
 363   2          case 1:
 364   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 365   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL2_ADD8;
 366   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL3_ADD8;
 367   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 368   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 369   2            break;
 370   2          case 2:
 371   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 372   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 373   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL3_ADD8;
 374   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 375   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 376   2            break;
 377   2          case 3:
 378   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 379   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 380   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL3_ADD8;
 381   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL4_ADD8;
 382   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 383   2            break;
 384   2          case 4:
 385   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 386   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 387   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL3_ADD8;
 388   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL4_ADD8;
 389   2            SEGDATA[7]= SEGDATA[7]&~STRENGTH_LEVEL5_ADD8;
 390   2            break;
 391   2          case 5:
 392   2            SEGDATA[0]= SEGDATA[0]|STRENGTH_LEVEL1_ADD1;
 393   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL2_ADD8;
 394   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL3_ADD8;
 395   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL4_ADD8;
 396   2            SEGDATA[7]= SEGDATA[7]|STRENGTH_LEVEL5_ADD8;
 397   2            break;
 398   2        } 
 399   1      
 400   1      }
 401          
 402          void LCD_CLEAR()
 403          {
 404   1        u8 i ;
 405   1        for(i=0;i<8;i++)
 406   1        {
 407   2          SEGDATA[i]=0x00;
 408   2        } 
 409   1      }
 410          
 411          void ShowContry(u8 i)
 412          {
 413   1        SEGDATA[3]=country_ecode[i][0];
 414   1        SEGDATA[4]=country_ecode[i][1];
 415   1        SEGDATA[5]=country_ecode[i][2];
 416   1        SEGDATA[6]=country_ecode[i][3];
 417   1        TM1722_SHOW();
 418   1      }
 419          
 420          
C51 COMPILER V9.52.0.0   TM1722                                                            01/25/2018 15:19:46 PAGE 8   

 421          
 422          /*****************************************
 423          函数：TM1722_SHOW() 显示LCD
 424          参数：无
 425          返回值：无
 426          *****************************************/
 427          void TM1722_SHOW()
 428          { 
 429   1        TM1722_Write_Word(0x02,SEGDATA[0]);
 430   1        delayms(2);
 431   1        
 432   1        TM1722_Write_Word(0x03,SEGDATA[1]);
 433   1         delayms(10);
 434   1      
 435   1        TM1722_Write_Word(0x06,SEGDATA[2]);
 436   1        delayms(10);
 437   1      
 438   1        TM1722_Write_Word(0x07,SEGDATA[3]);
 439   1        delayms(10);
 440   1      
 441   1        TM1722_Write_Word(0x0a,SEGDATA[4]);
 442   1        delayms(10);
 443   1      
 444   1        TM1722_Write_Word(0x0b,SEGDATA[5]);
 445   1        delayms(10);  
 446   1          
 447   1        TM1722_Write_Word(0x0e,SEGDATA[6]);
 448   1        delayms(10);
 449   1      
 450   1        TM1722_Write_Word(0x0f,SEGDATA[7]);
 451   1        delayms(10);  
 452   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1385    ----
   CONSTANT SIZE    =    139    ----
   XDATA SIZE       =     81       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
